name: üìã Epic
description: Major project phase or milestone
title: "[EPIC] "
labels: ["epic"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## Epic Template - Integration-First Planning
        Use this template for major project phases or milestones that contain multiple features.

        **üîó MANDATORY READING Before Creating Epic:**
        - [Development Methodology](../../../DEVELOPMENT_METHODOLOGY.md) - Integration-First approach for all sub-issues
        - [Project Plan](../../../planning/PROJECT_PLAN.md) - Phase context and dependencies
        - [Issue Context](../../../ISSUE_CONTEXT.md) - Project context and standards

        **‚ö†Ô∏è Epic Integration Requirements:**
        - All sub-issues MUST follow Integration-First development
        - Epic completion requires end-to-end user workflow verification
        - Phase MUST deliver complete, integrated functionality

  - type: input
    id: phase
    attributes:
      label: Phase
      description: Which implementation phase does this epic represent?
      placeholder: "Phase 1: Core Infrastructure"
    validations:
      required: true

  - type: textarea
    id: overview
    attributes:
      label: Phase Overview
      description: Brief description of what this phase accomplishes
      placeholder: "This phase builds the foundational infrastructure..."
    validations:
      required: true

  - type: textarea
    id: user_workflows
    attributes:
      label: End-to-End User Workflows
      description: What complete user workflows will this epic enable?
      placeholder: |
        Epic must enable these complete user journeys:

        Workflow 1: [User starts] ‚Üí [System actions] ‚Üí [User verifies] ‚Üí [Complete outcome]
        Workflow 2: [User starts] ‚Üí [System actions] ‚Üí [User verifies] ‚Üí [Complete outcome]
        Workflow 3: [User starts] ‚Üí [System actions] ‚Üí [User verifies] ‚Üí [Complete outcome]
    validations:
      required: true

  - type: textarea
    id: integration_architecture
    attributes:
      label: Integration Architecture
      description: How will components integrate to deliver the user workflows?
      placeholder: |
        Integration flow for this epic:
        - CLI Layer: [Commands and interfaces]
        - Core Layer: [Business logic and orchestration]
        - Database Layer: [Data persistence and state management]
        - Process Layer: [External process management]
        - Web Layer: [API endpoints and UI interfaces]

        Key integration points:
        - [Component A] ‚Üî [Component B]: [How they connect]
        - [Component B] ‚Üî [Component C]: [How they connect]
    validations:
      required: true

  - type: textarea
    id: success_criteria
    attributes:
      label: Integration-First Success Criteria
      description: Epic is complete only when all integration requirements are met
      placeholder: |
        ## Integration Requirements (MANDATORY):
        - [ ] All user workflows executable end-to-end
        - [ ] State persists across CLI/API invocations
        - [ ] Cross-component integration verified
        - [ ] All sub-issues demonstrate complete integration
        - [ ] Manual workflow verification completed

        ## Functional Requirements:
        - [ ] All sub-issues completed and closed
        - [ ] Integration tests passing for all workflows
        - [ ] Cross-process state persistence verified
        - [ ] Component boundaries well-defined

        ## Quality Requirements:
        - [ ] Code review completed for all integration points
        - [ ] Documentation updated with integration patterns
        - [ ] Performance acceptable for complete workflows
    validations:
      required: true

  - type: textarea
    id: dependencies
    attributes:
      label: Dependencies
      description: What must be completed before this epic can start?
      placeholder: |
        - Depends on: #issue-number
        - Blocks: #issue-number

  - type: textarea
    id: acceptance_criteria
    attributes:
      label: Acceptance Criteria
      description: Detailed acceptance criteria for epic completion
      placeholder: |
        - [ ] All sub-issues completed and closed
        - [ ] Tests passing for all features
        - [ ] Documentation updated
        - [ ] Code review completed

  - type: textarea
    id: sub_issues
    attributes:
      label: Sub-Issues
      description: List of related feature/task issues (will be updated as issues are created)
      placeholder: |
        - [ ] #issue-1
        - [ ] #issue-2
        - [ ] #issue-3
