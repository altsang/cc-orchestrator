name: üèóÔ∏è Feature
description: New feature or component implementation
title: "[FEATURE] "
labels: ["feature"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## Feature Template - Integration-First Development
        Use this template for implementing new features or components.

        **üîó MANDATORY READING Before Starting:**
        - [Development Methodology](../../../DEVELOPMENT_METHODOLOGY.md) - Integration-First approach required
        - [Issue Context](../../../ISSUE_CONTEXT.md) - Project context and standards
        - [Contributing Guidelines](../../../CONTRIBUTING.md) - Code quality and review standards

        **‚ö†Ô∏è Integration Requirements:**
        - Features MUST work end-to-end across all system boundaries
        - State MUST persist across separate CLI/API invocations
        - Integration tests MUST verify complete user workflows
        - NO TODOs in critical integration paths (database, state management)

  - type: dropdown
    id: phase
    attributes:
      label: Phase
      description: Which implementation phase does this feature belong to?
      options:
        - "Phase 1: Core Infrastructure"
        - "Phase 2: Git & Process Management"
        - "Phase 3: Web Interface"
        - "Phase 4: External Integrations"
        - "Phase 5: Advanced Features"
        - "Phase 6: Documentation & Release"
    validations:
      required: true

  - type: dropdown
    id: component
    attributes:
      label: Component
      description: Which component area does this feature affect?
      options:
        - CLI
        - Database
        - Configuration
        - Git/Worktrees
        - Process Management
        - Tmux Integration
        - Web Backend
        - Web Frontend
        - GitHub Integration
        - Jira Integration
        - Notifications
        - Documentation
        - Testing
        - DevOps
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: What is the priority of this feature?
      options:
        - High
        - Medium
        - Low
    validations:
      required: true

  - type: dropdown
    id: effort
    attributes:
      label: Effort Estimate
      description: Estimated effort to complete this feature
      options:
        - "S (< 4 hours)"
        - "M (4-8 hours)"
        - "L (1-2 days)"
        - "XL (2+ days)"
    validations:
      required: true

  - type: textarea
    id: description
    attributes:
      label: Description
      description: What needs to be implemented?
      placeholder: "Clear description of the feature requirements..."
    validations:
      required: true

  - type: textarea
    id: technical_requirements
    attributes:
      label: Technical Requirements
      description: Technical specifications and constraints
      placeholder: |
        - Requirement 1
        - Requirement 2
        - Requirement 3

  - type: textarea
    id: user_journey
    attributes:
      label: Complete User Journey
      description: Map the full end-to-end workflow this feature enables
      placeholder: |
        Example: "User creates instance ‚Üí Lists instances ‚Üí Stops instance ‚Üí Verifies stopped"

        Step 1: [User action]
        Step 2: [System response]
        Step 3: [User verification]
        Step 4: [Final outcome]
    validations:
      required: true

  - type: textarea
    id: integration_points
    attributes:
      label: Integration Points
      description: List all components, layers, and boundaries this feature touches
      placeholder: |
        - CLI commands
        - Core Orchestrator
        - Database persistence
        - Process management
        - Web API endpoints
        - Configuration system
    validations:
      required: true

  - type: textarea
    id: acceptance_criteria
    attributes:
      label: Integration-First Acceptance Criteria
      description: Focus on user outcomes and cross-component integration
      placeholder: |
        ## Integration Requirements (MANDATORY):
        - [ ] Complete user workflow executable end-to-end
        - [ ] State persists across separate CLI/API invocations
        - [ ] Integration tests verify component connections
        - [ ] No TODOs in critical integration paths
        - [ ] All layers properly connected (CLI ‚Üí Core ‚Üí Database)

        ## Functional Requirements:
        - [ ] Functional criteria 1
        - [ ] Functional criteria 2
        - [ ] Functional criteria 3

        ## Testing Requirements:
        - [ ] Integration tests implemented
        - [ ] Cross-process state persistence tested
        - [ ] Unit test coverage ‚â•90%
        - [ ] Manual end-to-end workflow verified
    validations:
      required: true

  - type: textarea
    id: implementation_notes
    attributes:
      label: Implementation Notes
      description: Technical approach, considerations, or constraints
      placeholder: "Technical approach and implementation details..."

  - type: textarea
    id: related_issues
    attributes:
      label: Related Issues
      description: Link to related issues, epics, or dependencies
      placeholder: |
        - Part of epic: #issue-number
        - Depends on: #issue-number
        - Blocks: #issue-number
